#ifndef PAGINA_HTML_H
#define PAGINA_HTML_H

static const char *pagina_html = 
"<html><head>"
"<meta charset='UTF-8'>"
"<meta name='viewport' content='width=device-width, initial-scale=1'>"
"<title>Emulador NE555 con ESP32</title>"
"<style>"
"body { font-family: Arial, sans-serif; text-align: center; background: #f0f2f5; margin: 0; padding: 0; }"
"form { display: inline-block; text-align: left; background: white; padding: 20px; border-radius: 12px; margin: 20px auto; box-shadow: 0 4px 15px rgba(0,0,0,0.1); width: 320px; }"
"input, select { margin: 10px 0; padding: 12px; width: calc(100% - 24px); border: 1px solid #ccc; border-radius: 8px; font-size: 14px; }"
"button { background: #007bff; color: white; border: none; padding: 12px; cursor: pointer; width: 100%; border-radius: 8px; font-size: 16px; transition: 0.3s; }"
"button:hover { background: #0056b3; transform: scale(1.05); }"
"#resultado { margin-top: 20px; background: #eee; padding: 10px; border-radius: 5px; }"
"</style>"
"</head><body>"
"<h2>Emulador de 555 - ESP32</h2>"
"<form>"
"<label for='tipo'>Tipo de circuito:</label>"
"<select id='tipo' onchange='mostrarEntradas()'>"
"<option value='astable'>Astable</option>"
"<option value='monostable'>Monostable</option>"
"<option value='pwm'>PWM</option>"
"</select>"

"<div id='entradas'></div>"

"<button type='button' onclick='ejecutar()'>Ejecutar</button>"
"<button type='button' onclick='detener()' style='margin-top:10px;background:#dc3545;'>Detener</button>"

"<div id='resultado'></div>"
"</form>"

"<script>"
"function mostrarEntradas() {"
"  const tipo = document.getElementById('tipo').value;"
"  const contenedor = document.getElementById('entradas');"
"  contenedor.innerHTML = '';"
"  if (tipo === 'astable') {"
"    contenedor.innerHTML += \"<label>Resistencia R1 (Ohm):<input type='number' id='r1'></label>\";"
"    contenedor.innerHTML += \"<label>Resistencia R2 (Ohm):<input type='number' id='r2'></label>\";"
"    contenedor.innerHTML += \"<label>Capacitor C (uF):<input type='number' id='c'></label>\";"
"  }"
"  else if (tipo === 'monostable') {"
"    contenedor.innerHTML += \"<label>Resistencia R1 (Ohm):<input type='number' id='r1'></label>\";"
"    contenedor.innerHTML += \"<label>Capacitor C (uF):<input type='number' id='c'></label>\";"
"  }"
"  else if (tipo === 'pwm') {"
"    contenedor.innerHTML += \"<label>Resistencia variable (Ohm):<input type='number' id='res'></label>\";"
"  }"
"}"

"function ejecutar() {"
"  const tipo = document.getElementById('tipo').value;"
"  let salida = '';"
"  let data = {};"

"  if (tipo === 'astable') {"
"    const r1 = parseFloat(document.getElementById('r1').value);"
"    const r2 = parseFloat(document.getElementById('r2').value);"
"    const c = parseFloat(document.getElementById('c').value);"
"    const freq = 1.44 / ((r1 + 2*r2) * c * 0.000001);"
"    salida = `Frecuencia aproximada: ${freq.toFixed(2)} Hz`;"
"    data = { tipo, r1, r2, c };"
"  } else if (tipo === 'monostable') {"
"    const r1 = parseFloat(document.getElementById('r1').value);"
"    const c = parseFloat(document.getElementById('c').value);"
"    const t = 1.1 * r1 * c * 0.000001;"
"    salida = `Tiempo de pulso: ${t.toFixed(4)} s`;"
"    data = { tipo, r1, c };"
"  } else if (tipo === 'pwm') {"
"    const res = parseFloat(document.getElementById('res').value);"
"    const pwm = Math.min(255, Math.max(0, (res / 10000) * 255));"
"    salida = `Valor PWM estimado: ${pwm.toFixed(0)} / 255`;"
"    data = { tipo, resistencia: res };"
"  }"

"  document.getElementById('resultado').innerText = salida;"

"  fetch('/set', {"
"    method: 'POST',"
"    headers: { 'Content-Type': 'application/json' },"
"    body: JSON.stringify(data)"
"  })"
"  .then(res => res.json())"
"  .then(json => console.log('Respuesta ESP32:', json))"
"  .catch(err => console.error('Error al enviar datos:', err));"
"}"

"function detener() {"
"  document.getElementById('resultado').innerText = 'Simulación detenida.';"
"  fetch('/stop')"
"    .then(() => console.log('Simulación detenida'))"
"    .catch(err => console.error('Error al detener:', err));"
"}"

"mostrarEntradas();"
"</script>"
"</body></html>";


#endif // HTML_PAGE_H